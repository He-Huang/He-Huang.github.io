<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>项目问题总结(持续更新)</title>
      <link href="2021/03/16/%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
      <url>2021/03/16/%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<br><h2 id="2021-03-16-更新"><a href="#2021-03-16-更新" class="headerlink" title="2021-03-16 更新"></a>2021-03-16 更新</h2><h3 id="1-旋转元素遇到的问题"><a href="#1-旋转元素遇到的问题" class="headerlink" title="1.旋转元素遇到的问题"></a>1.旋转元素遇到的问题</h3><p>想要某块元素实现旋转，通常情况下使用 css 的 transform 属性设置<code>rotate(角度deg)</code>即可。如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">// 使用transform旋转</span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">rotate</span>(30<span class="selector-tag">deg</span>);</span><br><span class="line"><span class="selector-tag">-ms-transform</span>: <span class="selector-tag">rotate</span>(30<span class="selector-tag">deg</span>); <span class="comment">/* IE 9 */</span></span><br><span class="line"><span class="selector-tag">-webkit-transform</span>: <span class="selector-tag">rotate</span>(30<span class="selector-tag">deg</span>); <span class="comment">/* Safari and Chrome */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是很多情况下，我们使用了旋转后发现效果并不是期待的那样，也许就需要用到我接下来说的属性来解决。</p><a id="more"></a><p>rotate 旋转属性默认都是以自身元素的中心为圆心来旋转，如下图。如果我们希望它不是围绕自身元素的中心旋转，这时就需要 transform-origin 属性来修改旋转圆心（这里只介绍 transform-origin 两个参数 2d 平面的旋转用法。3 个参数的 3d 用法暂不考虑）<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2021031609450581.gif" alt="在这里插入图片描述"></p><p>我们希望黄色区域旋转 90 度后与白色区域重叠，就需要对旋转中心进行设置。将圆心设在如下位置后就可以达到效果<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210316094521551.gif" alt="在这里插入图片描述"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* transform-origin的使用语法 */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">rotate</span>(90<span class="selector-tag">deg</span>)</span><br><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">x-axis</span> <span class="selector-tag">y-axis</span>;</span><br><span class="line"><span class="selector-tag">-ms-transform-origin</span>: <span class="selector-tag">x-axis</span> <span class="selector-tag">y-axis</span>;</span><br><span class="line"><span class="selector-tag">-webkit-transform-origin</span>: <span class="selector-tag">x-axis</span> <span class="selector-tag">y-axis</span>;</span><br><span class="line"><span class="selector-tag">-moz-transform-origin</span>: <span class="selector-tag">x-axis</span> <span class="selector-tag">y-axis</span>;</span><br><span class="line">// 可取的值</span><br><span class="line"><span class="selector-tag">x-axis</span>： <span class="selector-tag">left</span>、<span class="selector-tag">center</span>、<span class="selector-tag">right</span>、<span class="selector-tag">length</span>、%</span><br><span class="line"><span class="selector-tag">y-axis</span>： <span class="selector-tag">top</span>、<span class="selector-tag">center</span>、<span class="selector-tag">bottom</span>、<span class="selector-tag">length</span>、%</span><br></pre></td></tr></table></figure><p>以上面的实例来说，只需要设置黄色区域的样式内容如下即可达到想要的结果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>);</span><br><span class="line"><span class="attribute">-ms-transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>);</span><br><span class="line"><span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>);</span><br><span class="line"><span class="attribute">transform-origin</span>: 外部div宽度的一半 <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">-ms-transform-origin</span>: 外部div宽度的一半 <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">-webkit-transform-origin</span>: 外部div宽度的一半 <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">-moz-transform-origin</span>: 外部div宽度的一半 <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="2-移动端设备横竖屏切换时字体大小的问题"><a href="#2-移动端设备横竖屏切换时字体大小的问题" class="headerlink" title="2.移动端设备横竖屏切换时字体大小的问题"></a>2.移动端设备横竖屏切换时字体大小的问题</h3><p>做移动端的项目时，发横竖屏切换浏览器会默认改变 html 元素的 font-size 属性，导致横屏时的字体会比竖屏时的字体看起来更大。</p><p>仔细对比发现，<strong>在横屏时字体的大小和竖屏时字体的大小比例等于移动设备的屏幕高度比上宽度。简言之，如果移动设备的高度是宽度的两倍，那么横屏时的字体就会是竖屏时的字体的两倍大小。</strong> 这样的用户体验相对较差，于是便想要解决这个问题。</p><p>在网上搜了解决方案。大多看到的都是说给 body 添加如下样式:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">-webkit-text-size-adjust</span>: none;</span><br><span class="line"><span class="attribute">-moz-text-size-adjust</span>: none;</span><br><span class="line"><span class="attribute">-ms-text-size-adjust</span>: none;</span><br><span class="line"><span class="attribute">text-size-adjust</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 MDN 官网查找了该 text-size-adjust 属性，官网介绍为：<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210316101926446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzUyNjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>我在当前项目尝试该解决办法后发现并不能生效，横屏时的字体还是会比竖屏时字体更大。</p><p>于是我想或许可以给 html 元素添加一个固定大小的 font-size 值，让它横屏时也和竖屏一样大小。但我设置后发现，在代码里写的是 <code>font-size: 37.5px</code> 但是到浏览器打开后会变成 <code>font-size: 1rem</code> 并且字体看起来比竖屏时还要小。</p><p>为了弄清楚 rem 和 px 的区别。看了网上的介绍后，大致总结为如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>px是绝对单位，代表像素。</span><br><span class="line"><span class="number">2.</span>rem是相对单位，相对的是根元素的大小。也就是html元素的大小</span><br><span class="line"><span class="number">3.</span>默认情况下html的字体大小 1rem = 16px</span><br><span class="line">更多的内容可以查看 (http:<span class="comment">//caibaojian.com/rem-and-px.html)</span></span><br></pre></td></tr></table></figure><p>设置固定 px 是行不通了。但是我们从以上知道，横屏时默认转换为 1rem 代表的是 16px。竖屏时是 37.5px。那么只需要设置横屏时 html 的 font-size 为 <code>37.5/16 = 2.34 rem</code> 即可。</p><h4 id="拓展字体大小单位"><a href="#拓展字体大小单位" class="headerlink" title="拓展字体大小单位 %"></a>拓展字体大小单位 %</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">任意浏览器的默认字体高都是16px。所有未经调整的浏览器都符合: 1em=16px。</span><br><span class="line">那么12px=<span class="number">0.</span>75em,10px=<span class="number">0.</span>625em。为了简化font-size的换算，需要在css中</span><br><span class="line">的body选择器中声明font-size=<span class="number">62.5</span>%，这就使em值变为 16px*<span class="number">62.5</span>%=10px,</span><br><span class="line">这样12px=<span class="number">1.</span>2em, 10px=1em, 也就是说只需要将你的原来的px数值除以<span class="number">10</span>，</span><br><span class="line">然后换上em作为单位就行了。</span><br></pre></td></tr></table></figure><p>从以上信息可以知道字体的大小关系： <code>16px = 100%</code> 那么我想要设置字体大小为 37.5px。只需要知道 37.5px 和 16px 的比值，然后将这个比值设置为 html 的 font-size 的百分比大小，那么横屏时的字体大小就和竖屏时字体大小一样为 37.5px 了。求解得出<code> 37.5/16 = 2.34375</code>；就约等于 234.38%。设置后横屏时的字体和竖屏时的字体看起来相差无几。</p><p>至此，通过以上两种方法都可以解决当前问题。</p><h3 id="3-js-中数组的-map-方法"><a href="#3-js-中数组的-map-方法" class="headerlink" title="3.js 中数组的 map 方法"></a>3.js 中数组的 map 方法</h3><h4 id="应用场景一："><a href="#应用场景一：" class="headerlink" title="应用场景一："></a>应用场景一：</h4><p>一个对象数组，想要将该对象中的一个或多个属性单独抽出来组成新的数组。使用 map 方法</p><p>举例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [</span><br><span class="line">&#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">10</span>, <span class="attr">c</span>: <span class="number">4</span> &#125;,</span><br><span class="line">&#123; <span class="attr">a</span>: <span class="number">2</span>, <span class="attr">b</span>: <span class="number">20</span>, <span class="attr">c</span>: <span class="number">5</span> &#125;,</span><br><span class="line">&#123; <span class="attr">a</span>: <span class="number">3</span>, <span class="attr">b</span>: <span class="number">30</span>, <span class="attr">c</span>: <span class="number">6</span> &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="keyword">const</span> abs = array.map(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">a: e.a,</span><br><span class="line">b: e.b,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> obj;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// abs   [&#123;a: 1, b: 10&#125;, &#123;a: 2, b: 20&#125;, &#123;a: 3, b: 30&#125;]</span></span><br></pre></td></tr></table></figure><h4 id="应用场景二："><a href="#应用场景二：" class="headerlink" title="应用场景二："></a>应用场景二：</h4><p>一个对象数组，想要将该对象中的第一个键值对的值变成新数组对象中的键，第二个键值对的值变成新数组对象中的值。</p><p>举例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [</span><br><span class="line">&#123; <span class="attr">aaa</span>: <span class="string">&quot;name&quot;</span>, <span class="attr">bbb</span>: <span class="string">&quot;Jhon&quot;</span> &#125;,</span><br><span class="line">&#123; <span class="attr">aaa</span>: <span class="string">&quot;age&quot;</span>, <span class="attr">bbb</span>: <span class="string">&quot;20&quot;</span> &#125;,</span><br><span class="line">&#123; <span class="attr">aaa</span>: <span class="string">&quot;sex&quot;</span>, <span class="attr">bbb</span>: <span class="string">&quot;male&quot;</span> &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="keyword">const</span> abs = array.map(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;&#125;;</span><br><span class="line">obj[e.aaa] = e.bbb;</span><br><span class="line"><span class="keyword">return</span> obj;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// abs  [&#123;name: &quot;Jhon&quot;&#125;, &#123;age: &quot;20&quot;&#125;, &#123;sex: &quot;male&quot;&#125;]</span></span><br></pre></td></tr></table></figure><p>更多 map 的用法可以参考 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/map">Array.prototype.map</a></p><p>更多内容待更新…</p><h2 id="2021-03-22-更新"><a href="#2021-03-22-更新" class="headerlink" title="2021-03-22 更新"></a>2021-03-22 更新</h2><h3 id="1-移动端浏览器上下滑动问题"><a href="#1-移动端浏览器上下滑动问题" class="headerlink" title="1.移动端浏览器上下滑动问题"></a>1.移动端浏览器上下滑动问题</h3><p>在开发移动端的时候，上下滑动屏幕会导致整个页面跟着手指上下滑动。（例如下拉到顶部时，继续下拉，页面会被继续下拉而顶部显示空白）虽说这个效果并不影响用户体验，但是在开发一个下拉功能的时候，发现影响很大。于是就要解决该问题</p><p>解决这个问题也很简单，就是阻止默认事件。如下代码所示：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">e.preventDefault();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.body.addEventListener(</span><br><span class="line"><span class="string">&quot;touchmove&quot;</span>,</span><br><span class="line">func,</span><br><span class="line">&#123; <span class="attr">passive</span>: <span class="literal">false</span> &#125;</span><br><span class="line">); <span class="comment">// passive设置为true时，表示 listener 永远不会调用 preventDefault()。这里设置为false。用来兼容ios和Android都可以生效</span></span><br></pre></td></tr></table></figure><p>阻止默认事件后会让整个页面内的滚动事件都无法加载。这个处理方法也很简单，只需要移除这个阻止默认事件的监听即可：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">e.preventDefault();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.body.removeEventListener(</span><br><span class="line"><span class="string">&quot;touchmove&quot;</span>,</span><br><span class="line">func,</span><br><span class="line">&#123; <span class="attr">passive</span>: <span class="literal">false</span> &#125;</span><br><span class="line">); </span><br></pre></td></tr></table></figure><h3 id="2-vue项目中img的src属性设置"><a href="#2-vue项目中img的src属性设置" class="headerlink" title="2.vue项目中img的src属性设置"></a>2.vue项目中img的src属性设置</h3><p>在vue项目中，设置v-for循环显示多个图片，每个图片的src都是当前项目的asserts文件夹下的文件。通常默认都是使用如下方式来显示图片</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../../asserts/images/logo.png&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是当我们将src属性的值设置为data中的变量后，这样引用就会无法在页面上显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;img :src&#x3D;&quot;imgSrc&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            imgSrc: &quot;..&#x2F;..&#x2F;asserts&#x2F;images&#x2F;logo.png&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>解决办法：</p><blockquote><p>1.把图片放在src同级的static文件夹下。<br>2.把图片放在cdn上，把网络地址存在imgUrl里，然后直接<img :src="imgUrl">去展示。<br>3.图片放在assets文件夹，然后在data里面require进图片</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 项目问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站上线部署流程</title>
      <link href="2021/03/02/%E7%BD%91%E7%AB%99%E4%B8%8A%E7%BA%BF%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/"/>
      <url>2021/03/02/%E7%BD%91%E7%AB%99%E4%B8%8A%E7%BA%BF%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<br><h3 id="1-服务器购买"><a href="#1-服务器购买" class="headerlink" title="1.服务器购买"></a>1.服务器购买</h3><p>国内服务器： <a href="https://www.aliyun.com/product/ecs">阿里云 ECS(Elastic Compute Service)</a>， <a href="https://buy.cloud.tencent.com/cvm">腾讯云 CVM(Cloud Virtual Machine)</a>等</p><p>国外服务器：<a href="https://www.vultr.com/">日本[Vultr]</a>，美国 Linode，谷歌云，微软 Azure，亚马逊 AWS 等</p><p>这一步需要创建好服务器实例，分配好公网 IP 地址。</p><h3 id="2-域名购买"><a href="#2-域名购买" class="headerlink" title="2.域名购买"></a>2.域名购买</h3><p>国内：阿里、腾讯等</p><p>国外：Godaddy</p><h3 id="3-域名解析-配置-DNS"><a href="#3-域名解析-配置-DNS" class="headerlink" title="3.域名解析(配置 DNS)"></a>3.域名解析(配置 DNS)</h3><p>注册好域名后需要将域名映射到自己服务器对应的 ip 地址，这样别人才能通过域名访问到我们的服务器。</p><p>这个步骤叫做域名解析，通过域名服务商提供的后台就可以操作，一般域名解析会有延迟，不是及时生效的。</p><a id="more"></a><h3 id="4-服务器环境搭建"><a href="#4-服务器环境搭建" class="headerlink" title="4.服务器环境搭建"></a>4.服务器环境搭建</h3><p>配置服务器， Mac 系统下直接使用终端就 ok</p><p>windows 系统下需要用到 git bash，或者别的工具(Putty)</p><p>需要用到的 Linux 系统操作命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 远程连接命令</span></span><br><span class="line">ssh root@域名</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 展示当前文件夹路径</span></span><br><span class="line">pwd</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换文件夹目录</span></span><br><span class="line">cd 目录</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 展示当前文件夹中内容</span></span><br><span class="line">ls</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编辑文件</span></span><br><span class="line">vim 文件路径</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 传输文件</span></span><br><span class="line">scp 本地文件路径 root@域名:远程路径</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压文件命令</span></span><br><span class="line">unzipjs</span><br></pre></td></tr></table></figure><h4 id="4-1-安装-CentOS-开发人员相关包"><a href="#4-1-安装-CentOS-开发人员相关包" class="headerlink" title="4.1 安装 CentOS 开发人员相关包"></a>4.1 安装 CentOS 开发人员相关包</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall <span class="string">&#x27;Development tools&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-配置免密登录"><a href="#4-2-配置免密登录" class="headerlink" title="4.2 配置免密登录"></a>4.2 配置免密登录</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在自己电脑上 生成本地 密钥对</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成的位置</span></span><br><span class="line"><span class="comment"># windows 在 C:\users\你的用户名\.ssh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在服务器创建一个 .ssh 文件夹</span></span><br><span class="line">mkdir .ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到这个文件夹</span></span><br><span class="line"><span class="built_in">cd</span> .ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个文件</span></span><br><span class="line">touch authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把本地电脑生成的密钥对中 id_rsa_pub 文件中的内容放到 authorized_keys 文件中去</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDP0Ur7rojMdFqTDUQx56QuxeNbqbeCO6lQz9t3KZAWjjJhSG5v1TMhElunJg7HJtovIGlTDwrco9U36gF/nJ+66Gwzeme4eSwUYAu8D7XjFEfFvUPHwtSUDZKV9jtPPsoujUM9LnxvJ09buU0+xpOCE6LAR7e3vPRmrlolQc88b/JbH2A4lsXGIhGNNK/Z6M5LagD8KTNePLv7jc3kA2GZdUUze1wIVBjO21BTK90hfVbEGL0WREVh9RKR33jl7L5s8mnBbLJbsuk/Jk0C5ZNSKKCpFfDBsDQWYodyw1wI7gdpWuV8cH0CYz4xTRuOcIOv7sUjx9gbW09eNZnNOkDxpTvzPuP9CqKFSBma1xtnhhJYdw6b+xnoVPthUKhWzvp9ElQUtAGK+Xzauk5CxHyESZGGoA/YZQZ0U0rmoTrvG5JvnYOclDFMAIfe/pBJR5Ue6tlfBSMBWaHs61b334kAAUbtgF8TW9owH6lSZYsz2mS8nPF6a47bIwZwwsXmoWM= hua&#x27;wei@LAPTOP-4NR7HM4G&quot;</span> &gt;&gt; authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出服务器，下次就免密登录</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h4 id="4-3-安装-nginx"><a href="#4-3-安装-nginx" class="headerlink" title="4.3 安装 nginx"></a>4.3 安装 nginx</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加nginx 源</span></span><br><span class="line">sudo yum install epel-release</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装nginx</span></span><br><span class="line">sudo yum install nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动nginx</span></span><br><span class="line">sudo systemctl start nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置防火墙规则</span></span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=http</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=https</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><h4 id="4-4-安装-JDK（后端是-java-运行的）"><a href="#4-4-安装-JDK（后端是-java-运行的）" class="headerlink" title="4.4 安装 JDK（后端是 java 运行的）"></a>4.4 安装 JDK（后端是 java 运行的）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 在你的本地Windows系统中下载 Linux系统下的jdk，jdk下载官网https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html。</span></span><br><span class="line">下载你需要的jdk版本，我用的是 jdk-8u221-linux-x64.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.下载完成后将安装包上传服务器</span></span><br><span class="line">使用winscp上传文件至 /usr/java</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3.解压文件</span></span><br><span class="line">tar -zxvf /usr/java/jdk-8u221-linux-x64.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"> 4.配置path</span></span><br><span class="line">cd /etc</span><br><span class="line">vim profile</span><br><span class="line">在profile文件中添加如下代码</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_221   # jdk解压后的路径</span><br><span class="line">export CLASSPATH=$JAVA_HOME/lib/</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br><span class="line"><span class="meta">#</span><span class="bash"> 5.查看是否安装成功</span></span><br><span class="line">java -version</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-5-安装-MySQL（数据库）"><a href="#4-5-安装-MySQL（数据库）" class="headerlink" title="4.5 安装 MySQL（数据库）"></a>4.5 安装 MySQL（数据库）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载并安装MySQL 源</span></span><br><span class="line">wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">sudo yum localinstall mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证仓库是否添加成功</span></span><br><span class="line">yum repolist enabled | grep &quot;mysql.*-community.*&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装MySQL</span></span><br><span class="line">sudo yum install mysql-community-server -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果上一步报错，执行下面的命令后再次执行上面的安装Mysql命令</span></span><br><span class="line">sudo yum module disable mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改配置 lower_case_table_names=1</span></span><br><span class="line">需要先修改配置文件，</span><br><span class="line">vi /etc/my.cnf</span><br><span class="line">[mysqld]  下增加</span><br><span class="line">lower_case_table_names=1</span><br><span class="line">注：如果不加这一行，mysql会区分数据库表的大小写。 0代表区分大小写，1代表不区分大小写。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动MySQL</span></span><br><span class="line">systemctl start mysqld</span><br><span class="line"></span><br><span class="line">systemctl enable mysqld</span><br><span class="line">systemctl status mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 找到默认密码</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> MySQL安装完毕后会设置一个默认密码，我们需要找到默认密码</span></span><br><span class="line">grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 连接到MySQL数据库，修改密码</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改数据库密码 密码要求有大小写英文字母和数字</span></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;Hehuang++0724&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许远程连接</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> use mysql;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select host,user,authentication_string,plugin from user;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> update user <span class="built_in">set</span> host=<span class="string">&#x27;%&#x27;</span> <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span>;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> flush privileges;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注：如果服务器防火墙未开，记得开放mysql的端口。另外安全组也需要开放mysql端口。</span></span><br></pre></td></tr></table></figure><h3 id="5-上传网站资源"><a href="#5-上传网站资源" class="headerlink" title="5.上传网站资源"></a>5.上传网站资源</h3><p>可以使用 scp 命令，也可以安装 FTP(winSCP、vsftpd)工具。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> scp 命令运行在本地电脑</span></span><br><span class="line">scp 本地文件 root@域名:远程路径</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在服务器创建文件夹</span></span><br><span class="line">mkdir /home/nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 把网页文件移动到创建好的文件夹里</span></span><br><span class="line">mv ./dist.zip /home/nginx/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压压缩文件</span></span><br><span class="line">cd /home/nginx</span><br><span class="line">unzip ./dist.zip</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改文件夹名字</span></span><br><span class="line">mv dist 文件夹名</span><br></pre></td></tr></table></figure><h3 id="6-配置-nginx"><a href="#6-配置-nginx" class="headerlink" title="6.配置 nginx"></a>6.配置 nginx</h3><p>创建一个配置文件 exam.conf （配置 nginx 服务）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx/conf.d</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建配置文件</span></span><br><span class="line">touch exam.conf</span><br><span class="line">vim exam.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 按i键 进入编辑模式</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 输入如下配置内容</span></span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name hehuang724.cn; # 服务器地址/域名地址</span><br><span class="line">location / &#123;</span><br><span class="line">root /home/nginx/exam;</span><br><span class="line">index index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 保存退出</span></span><br><span class="line">:wq</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重新启动nginx服务</span></span><br><span class="line">sudo systemctl reload nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或 以下命令</span></span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看nginx状态</span></span><br><span class="line">sudo systemctl status nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止nginx服务</span></span><br><span class="line">sudo systemctl stop nginx</span><br></pre></td></tr></table></figure><h3 id="7-接口项目部署-java-项目"><a href="#7-接口项目部署-java-项目" class="headerlink" title="7. 接口项目部署(java 项目)"></a>7. 接口项目部署(java 项目)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动jar包</span></span><br><span class="line">java -jar /home/java/exam.jar  # 关闭后就停止运行了</span><br><span class="line">nohup java -jar /home/java/exam.jar &gt;exam.log 2&gt;&amp;1 &amp;  # 后台不停止运行</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看日志</span></span><br><span class="line">cat exam.log</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭防火墙才能访问springboot项目 查看其防火墙的状态：</span></span><br><span class="line">systemctl status firewalld.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭后就可以正常访问页面</span></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启防火墙</span></span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure><h3 id="Node-作为服务端："><a href="#Node-作为服务端：" class="headerlink" title="Node 作为服务端："></a>Node 作为服务端：</h3><h3 id="8-安装-Node-js-（后端是-Node-运行的）"><a href="#8-安装-Node-js-（后端是-Node-运行的）" class="headerlink" title="8.安装 Node.js （后端是 Node 运行的）"></a>8.安装 Node.js （后端是 Node 运行的）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum自带源中没有Node.js，所以首先要获取Node.js资源</span></span><br><span class="line">curl --silent --location https://rpm.nodesource.com/setup_14.x |bash -</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装Node.js</span></span><br><span class="line">yum install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装完成后使用如下指令测试安装是否成功</span></span><br><span class="line">node -v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装pm2 启动node.js项目</span></span><br><span class="line">pm2 start 文件名/id</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止</span></span><br><span class="line">pm2 stop 文件名/id</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 从pm2列表 删除</span></span><br><span class="line">pm2 delete 文件名/id</span><br></pre></td></tr></table></figure><h3 id="9-Node-项目部署步骤（Node-项目）"><a href="#9-Node-项目部署步骤（Node-项目）" class="headerlink" title="9.Node 项目部署步骤（Node 项目）"></a>9.Node 项目部署步骤（Node 项目）</h3><p>1.修改配置项文件中的 mysql 数据库密码为服务器中数据库的密码 2.上传项目压缩文件到服务器 3.再服务器上解压项目文件到 /home/nginx/hlj 4.为项目安装依赖 npm i 5.修改 mysql 数据库 密码规则</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;Hehuang++0724&#x27; PASSWORD EXPIRE NEVER;</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;Hehuang++0724&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看是否以及修改成功</span></span><br><span class="line">select user,host plugin from user where user=&#x27;root&#x27;;</span><br></pre></td></tr></table></figure><p>6.创建新的数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 登录数据口执行命令</span></span><br><span class="line">create database 数据库名称</span><br></pre></td></tr></table></figure><p>7.在之前的 nginx 配置文件中添加反向代理的配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location ^~ /api/ &#123;</span><br><span class="line">rewrite ^/api/(.*)$ /$1 break;</span><br><span class="line">proxy_pass http://127.0.0.1:3000; # 服务端配置的默认端口</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>8.新增一个服务端配置文件</p><p>admin.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx/conf.d</span><br><span class="line">touch admin.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在文件中输入以下内容</span></span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name admin.hehuang724.cn; # 域名前加admin</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://127.0.0.1:3000;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="部署过程遇到的问题："><a href="#部署过程遇到的问题：" class="headerlink" title="部署过程遇到的问题："></a>部署过程遇到的问题：</h2><h3 id="1-linux-上部署-springboot-项目启动成功本地无法访问"><a href="#1-linux-上部署-springboot-项目启动成功本地无法访问" class="headerlink" title="1.linux 上部署 springboot 项目启动成功本地无法访问"></a>1.linux 上部署 springboot 项目启动成功本地无法访问</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭防火墙才能访问springboot项目</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 系统是centos8 ,查看其防火墙的状态：</span></span><br><span class="line">systemctl status firewalld.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭后就可以正常访问页面</span></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启防火墙</span></span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure><h3 id="2-linux-服务器-mysql-区分表名大小写解决办法"><a href="#2-linux-服务器-mysql-区分表名大小写解决办法" class="headerlink" title="2.linux 服务器 mysql 区分表名大小写解决办法"></a>2.linux 服务器 mysql 区分表名大小写解决办法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">在mysql安装目录(/etc/my.cnf)中的my.cnf文件中[mysqld]下面添加一行配置， lower_case_table_names=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启mysql服务</span></span><br><span class="line">service mysql restart</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启mysql服务发现报错，原因是只有在初始化的时候设置 lower_case_table_names=1才有效</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解决办法：卸载mysql，按下操作</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载完mysql后，重新安装，安装完成后，首先立马修改配置文件</span></span><br><span class="line">vi /etc/my.cnf</span><br><span class="line">[mysqld]  下增加</span><br><span class="line">lower_case_table_names=1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置完后重启mysql</span></span><br><span class="line">systemctl start mysqld</span><br><span class="line">systemctl enable mysqld</span><br><span class="line">systemctl status mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 随后按上面的操作重新修改数据库密码</span></span><br></pre></td></tr></table></figure><h3 id="3-卸载-mysql"><a href="#3-卸载-mysql" class="headerlink" title="3.卸载 mysql"></a>3.卸载 mysql</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">1、关闭mysql</span><br><span class="line">service mysqld stop</span><br><span class="line"></span><br><span class="line">2、查看安装的mysql</span><br><span class="line">rpm -qa|grep -i mysql</span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; [root@vultrguest ~]<span class="comment"># rpm -qa|grep -i mysql</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; mysql-community-libs-8.0.23-1.el7.x86_64</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; mysql80-community-release-el7-1.noarch</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; mysql-community-client-8.0.23-1.el7.x86_64</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; mysql-community-common-8.0.23-1.el7.x86_64</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; mysql-community-server-8.0.23-1.el7.x86_64</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; mysql-community-client-plugins-8.0.23-1.el7.x86_64</span></span><br><span class="line"></span><br><span class="line">3、卸载mysql</span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; rpm -ev mysql-community-libs-8.0.23-1.el7.x86_64 --nodeps</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; rpm -ev mysql80-community-release-el7-1.noarch --nodeps</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; rpm -ev mysql-community-client-8.0.23-1.el7.x86_64  --nodeps</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; rpm -ev mysql-community-common-8.0.23-1.el7.x86_64 --nodeps</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; rpm -ev mysql-community-server-8.0.23-1.el7.x86_64 --nodeps</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; rpm -ev mysql-community-client-plugins-8.0.23-1.el7.x86_64 --nodeps</span></span><br><span class="line"></span><br><span class="line">4、找出并删除mysql相关目录</span><br><span class="line">find / -name mysql</span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; [root@vultrguest ~]<span class="comment"># find / -name mysql</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; /var/lib/mysql</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; /var/lib/mysql/mysql</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; /usr/bin/mysql</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; /usr/lib64/mysql</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&gt; /etc/logrotate.d/mysql</span></span><br><span class="line">rm -rf /var/lib/mysql</span><br><span class="line">rm -rf /var/lib/mysql/mysql</span><br><span class="line">rm -rf /usr/bin/mysql</span><br><span class="line">rm -rf /usr/lib64/mysql</span><br><span class="line">rm -rf /etc/logrotate.d/mysql</span><br><span class="line"></span><br><span class="line">5、删除my.cnf</span><br><span class="line">rm -rf /etc/my.cnf</span><br><span class="line"></span><br><span class="line">6、检查卸载情况</span><br><span class="line">rpm -qa|grep -i mysql</span><br><span class="line">显示为空，卸载完毕。</span><br><span class="line">卸载完成后参考以下博客进行重新安装mysql并配置不区分大小写：</span><br><span class="line">https://blog.csdn.net/qq_35845339/article/details/106547742</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_35845339/article/details/106547742">Linux 下安装 mysql8(并设置不区分数据库表大小写)</a></p><h3 id="4-nginx-解决前端跨域问题"><a href="#4-nginx-解决前端跨域问题" class="headerlink" title="4.nginx 解决前端跨域问题"></a>4.nginx 解决前端跨域问题</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name texam.tk;    <span class="comment"># 服务器域名</span></span><br><span class="line">location / &#123;</span><br><span class="line">root /usr/share/nginx/exam;</span><br><span class="line">index index.html index.htm;</span><br><span class="line"><span class="comment"># 添加请求头</span></span><br><span class="line">        add_header <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> *;</span><br><span class="line">        add_header <span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line">        add_header <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>;</span><br><span class="line">        add_header <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;</span>;</span><br><span class="line">    <span class="comment"># 代理到80端口</span></span><br><span class="line">    proxy_pass http://localhost:80;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 配置接口</span></span><br><span class="line">location /api &#123;</span><br><span class="line">      include uwsgi_params;</span><br><span class="line">      <span class="comment"># 代理路径本地3033端口</span></span><br><span class="line">     proxy_pass  http://localhost:3033/api;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>设置 proxy_pass 有可能访问当前域名页面会提示 502BadGate</p><h4 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h4><p>查看系统 httpd 配置：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsebool -a | grep httpd</span><br></pre></td></tr></table></figure><p>设置 httpd 可以连接到网络，执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsebool httpd_can_network_connect on -P</span><br></pre></td></tr></table></figure><h2 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h2><h3 id="1-Linux-相关命令："><a href="#1-Linux-相关命令：" class="headerlink" title="1.Linux 相关命令："></a>1.Linux 相关命令：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 端口进程相关</span></span><br><span class="line">netstat -anp  # 查看端口信息</span><br><span class="line">netstat -anp | grep 3306  # 查看端口信息，过滤3306端口</span><br><span class="line">sudo kill -9 pid号  # 杀死pid对应进程</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> springboot相关</span></span><br><span class="line">nohup java -jar /home/java/exam.jar &gt;exam.log 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="meta">#</span><span class="bash"> nohup：不挂断地运行命令，退出帐户之后继续运行相应的进程。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> exam.log：是nohup把<span class="built_in">command</span>的输出重定向到当前目录的指定的“日志文件名.<span class="built_in">log</span>”文件中，即输出内容不打印到屏幕上，而是输出到<span class="string">&quot;exam.log&quot;</span>文件中。不指定文件名会在当前目录创建nohup.out，如果当前目录的 nohup.out 文件不可写，输出重定向到 <span class="variable">$HOME</span>/nohup.out 文件中。如果没有文件能创建或打开以用于追加，那么 Command 参数指定的命令不可调用。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2&gt;&amp;1：2就是标准错误，1是标准输出，该命令相当于把标准错误重定向到标准输出么。这里&amp;相当于标准错误等效于标准输出，即把标准错误和标准输出同时输出到指定的“exam.log”文件中。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 最后的&amp;：让该作业在后台运行</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql相关</span></span><br><span class="line">whereis mysql # 显示mysql的安装和文件目录等</span><br><span class="line">systemctl start mysqld # 启动mysql服务</span><br><span class="line">systemctl enable mysqld # 开启mysql服务</span><br><span class="line">systemctl status mysqld # 显示mysql的状态</span><br></pre></td></tr></table></figure><p>本人将毕业设计在线考试系统已部署到以下地址：</p><p><a href="texam.tk">在线考试系统</a></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连接服务器</title>
      <link href="2021/03/02/%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>2021/03/02/%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>由于阿里云的活动，我领取了一款云服务器可以免费使用一个月。如下图<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210223140024246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzUyNjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>我目前是一个前端开发人员，领取了这个服务器想着是用来搭建自己的网站，由于在这之前也没有 linux 的相关学习经历，在领取该服务器后进行了一系列的操作后才将静态网页上传到服务器并通过公网 ip 访问可以显示出来。便在此处记录下整个过程。</p><a id="more"></a><h2 id="一、领取服务器"><a href="#一、领取服务器" class="headerlink" title="一、领取服务器"></a>一、领取服务器</h2><ol><li> 在领取服务器后首先选择的是服务器的操作系统，这里我选择的是<code>Ubuntu操作系统</code>，版本是<code>14.04 64位</code>。</li><li>完成以上选择后，直接点击购买就可以了。购买完成后打开控制台，在左侧菜单栏里打开<code>实例与镜像 ——&gt; 实例</code>，然后将服务器的密码进行重置<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210223141413830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzUyNjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>重置完成后，进行远程连接。在这里我选择的是第一个 Workbench 远程连接。然后在密码栏输入刚刚重置的密码，进行登录。登录成功后就进入了命令窗口。在命令窗口输入相关命令就可以对服务器进行一系列操作。<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210223141722509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzUyNjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><h2 id="二、安装配置-nginx"><a href="#二、安装配置-nginx" class="headerlink" title="二、安装配置 nginx"></a>二、安装配置 nginx</h2><p>nginx 是一个高性能的 HTTP 和反向代理 web 服务器。我这里通过 nginx 来配置静态页面，同时也是为了以后方便上传 vue 项目。</p><h3 id="1-通过包管理器安装-nginx："><a href="#1-通过包管理器安装-nginx：" class="headerlink" title="1. 通过包管理器安装 nginx："></a>1. 通过包管理器安装 nginx：</h3><p>Ubuntu 和 CentOS 分别对应于不同的包管理器。<br>这里使用 Ubuntu 系统，所以选择<code>apt-get</code>命令进行安装</p><table><thead><tr><th>操作系统</th><th>文件格式</th><th>工具</th></tr></thead><tbody><tr><td>Ubuntu</td><td>.deb</td><td>apt，<code>apt-get</code>，apt-cache，dpkg</td></tr><tr><td>CentOS</td><td>.rmp</td><td><code>yum</code></td></tr></tbody></table><p>安装命令：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nginx</span><br></pre></td></tr></table></figure><p>安装成功后可以通过以下命令查看 nginx 进程</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep nginx</span><br></pre></td></tr></table></figure><p>通过包管理器安装 nginx 成功后会默认开启 nginx 服务，直接访问当前服务器公网 ip 即可看到如下页面<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210224171813407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzUyNjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-通过数据源安装-nginx"><a href="#2-通过数据源安装-nginx" class="headerlink" title="2. 通过数据源安装 nginx"></a>2. 通过数据源安装 nginx</h3><p>该方法可以参考了以下博客：<br><a href="https://www.cnblogs.com/emmm/p/12240279.html">阿里云服务器安装 nginx（ubantu16.04）</a></p><h3 id="3-自定义配置-nginx"><a href="#3-自定义配置-nginx" class="headerlink" title="3.自定义配置 nginx"></a>3.自定义配置 nginx</h3><p>在安装完 nginx 后，按照上述步骤，打开公网 IP 就可以看到 nginx 的欢迎页。到这算是成功了一大半。最后可以修改 nginx 中的配置文件，渲染自己的网页。可以参照以下博客：<br><a href="https://blog.csdn.net/SherrybabyOne/article/details/89892415">云服务器 Nginx 配置</a></p><h2 id="三、使用图形化工具管理服务器的文件"><a href="#三、使用图形化工具管理服务器的文件" class="headerlink" title="三、使用图形化工具管理服务器的文件"></a>三、使用图形化工具管理服务器的文件</h2><p>这里我使用的是 WinSCP，安装就不介绍了，安装完成后打开，协议默认，端口默认，用户名一般都是 root，密码就是之前重置的实例密码。<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210223151905844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzUyNjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>登录成功后显示如下页面，左边显示的当前你的电脑的硬盘内的文件，右边显示的是服务器的文件。可以直接将左边的文件拖入到右边服务器内。<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210223152053223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzUyNjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>这里贴上我的配置文件和目录</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen <span class="number">80</span> default_server;</span><br><span class="line">listen [::]:<span class="number">80</span> default_server ipv6only=on;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Make site accessible from http:<span class="comment">//localhost/</span></span><br><span class="line">server_name localhost;</span><br><span class="line"></span><br><span class="line"><span class="meta">#location / &#123;</span></span><br><span class="line"># First attempt to serve request as file, then</span><br><span class="line"><span class="meta"># as directory, then fall back to displaying a 404.</span></span><br><span class="line"># try_files $uri $uri/ =<span class="number">404</span>;</span><br><span class="line"># Uncomment to enable naxsi on <span class="keyword">this</span> location</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> /etc/nginx/naxsi.rules</span></span><br><span class="line">#&#125;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">  # 静态页面存放在这个路径</span><br><span class="line">          root /home/qd/html;</span><br><span class="line">            index index.html index.htm;</span><br><span class="line">            try_files $uri $uri/  /index.html;</span><br><span class="line">     &#125;</span><br><span class="line"># Only <span class="keyword">for</span> nginx-naxsi used with nginx-naxsi-ui : process denied requests</span><br><span class="line"><span class="meta">#location /RequestDenied &#123;</span></span><br><span class="line">#proxy_pass http:<span class="comment">//127.0.0.1:8080;</span></span><br><span class="line">#&#125;</span><br><span class="line"></span><br><span class="line">#error_page <span class="number">404</span> /<span class="number">404.</span>html;</span><br><span class="line"></span><br><span class="line"><span class="meta"># redirect server <span class="meta-keyword">error</span> pages to the static page /50x.html</span></span><br><span class="line">#</span><br><span class="line">#error_page <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /<span class="number">50</span>x.html;</span><br><span class="line"><span class="meta">#location = /50x.html &#123;</span></span><br><span class="line"><span class="meta">#root /usr/share/nginx/html;</span></span><br><span class="line">#&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">#</span><br><span class="line"><span class="meta">#location ~ \.php$ &#123;</span></span><br><span class="line">#fastcgi_split_path_info ^(.+\.php)(/.+)$;</span><br><span class="line">## NOTE: You should have <span class="string">&quot;cgi.fix_pathinfo = 0;&quot;</span> in php.ini</span><br><span class="line">#</span><br><span class="line">## With php5-cgi alone:</span><br><span class="line">#fastcgi_pass <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">9000</span>;</span><br><span class="line">## With php5-fpm:</span><br><span class="line">#fastcgi_pass unix:/var/run/php5-fpm.sock;</span><br><span class="line">#fastcgi_index index.php;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> fastcgi_params;</span></span><br><span class="line">#&#125;</span><br><span class="line"></span><br><span class="line"># deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class="line"># concurs with nginx&#x27;s one</span><br><span class="line">#</span><br><span class="line"><span class="meta">#location ~ /\.ht &#123;</span></span><br><span class="line"><span class="meta">#deny all;</span></span><br><span class="line">#&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210223152742523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzUyNjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>至此就可以正常的显示你上传的静态页面了。同理，vue 项目只需要将打包后的 dist 目录拖到这个静态页面路径内。后面再慢慢研究服务端上传服务器。</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> aliyun </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git clone 加速</title>
      <link href="2021/02/20/git-clone-%E5%8A%A0%E9%80%9F/"/>
      <url>2021/02/20/git-clone-%E5%8A%A0%E9%80%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在拷贝 github 上优秀的开源项目时，每次使用 git<br>clone 命令都要等好久。上网查找了很多办法，有改 host 文件的，也有修改 ip 的。还有把项目 fork 再添加到 gitee 中再 clone 的(因为 gitee 是国内的服务器，再 clone 就会很快)。都比较麻烦</p></blockquote><p>这里有两个很简便的方法亲测有效<br>以 clone vue 为例：</p><blockquote><p><code>git clone https://github.com/vuejs/vue.git</code></p></blockquote><h1 id="1-使用-cnpm-代理"><a href="#1-使用-cnpm-代理" class="headerlink" title="1. 使用 cnpm 代理"></a>1. 使用 cnpm 代理</h1><blockquote><p>git clone <a href="https://github.com.cnpmjs.org/vuejs/vue.git">https://github.com.cnpmjs.org/vuejs/vue.git</a></p></blockquote><h1 id="2-使用码云的镜像"><a href="#2-使用码云的镜像" class="headerlink" title="2. 使用码云的镜像"></a>2. 使用码云的镜像</h1><blockquote><p>git clone <a href="https://gitee.com/mirrors/vue.git">https://gitee.com/mirrors/vue.git</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3 新特性——在css中使用js变量</title>
      <link href="2021/02/20/vue3-%E6%96%B0%E7%89%B9%E6%80%A7%E2%80%94%E2%80%94%E2%80%94%E5%9C%A8css%E4%B8%AD%E4%BD%BF%E7%94%A8js%E5%8F%98%E9%87%8F/"/>
      <url>2021/02/20/vue3-%E6%96%B0%E7%89%B9%E6%80%A7%E2%80%94%E2%80%94%E2%80%94%E5%9C%A8css%E4%B8%AD%E4%BD%BF%E7%94%A8js%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在 github 上发现一个 Vue3 非常好玩的特性，这个特性我以前就经常这么想：要是我在 data 里面定义的变量也能在 CSS 里面用那该多好啊！(大家有没有也这么想过)</p></blockquote><h3 id="幻想"><a href="#幻想" class="headerlink" title="幻想"></a><strong>幻想</strong></h3><p>以前做项目的时候经常会这么想：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; color &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">color: <span class="string">&quot;red&quot;</span>,</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">h1 &#123;</span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-tag">this</span><span class="selector-class">.color</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当然，想想也知道不可能，JS 和 CSS 隶属不同上下文，CSS 哪来的 this 呢？</p><p>那么怎么才能在 CSS 中使用 JS 变量呢？那就只能用 JS 操作 DOM 然后把变量塞进 style 里了，比如用 ref 获取到 DOM 元素，然后 dom.style.color = this.color。</p><a id="more"></a><p>或者在模板里：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; color &#125;&quot;</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">color: <span class="string">&quot;red&quot;</span>,</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不过这种方式还是有缺陷的，比如本来就不推荐把样式写在 style 属性里，还有就是变量复用会很麻烦，比如一组 DOM 元素都想用这个变量，那就不得不给这一组起个类名，然后再在 mounted 里面 document.getElementsByClassName()，获取到 DOM 集合之后还要循环遍历每个元素，为其加上 dom.style.color = this.color，浪费了很多的性能。</p><p>其实 CSS 很多缺陷，并不图灵完备，所以才导致了各种预处理器的出现：Sass、Less、Stylus 等……</p><p>它们为 CSS 提供了很多特性：循环、条件语句、变量、函数等……</p><p>其中有个特性非常有用，那就是变量！于是 CSS 也引入了变量的这个概念，自从有了 CSS 变量，很多事情真的方便了许多，通过 JS 操作 CSS 变量，然后再在需要的地方使用 CSS 变量，这种方法比之前的高效得多。</p><h3 id="什么是-CSS-变量"><a href="#什么是-CSS-变量" class="headerlink" title="什么是 CSS 变量"></a>什么是 CSS 变量</h3><p>在 JS 里(不止 JS，所有语言都差不多)，变量有如下几个特性：</p><ul><li>声明</li><li>使用</li><li>作用域</li></ul><p><strong><em>声明</em></strong></p><p>为了方便理解，咱们通过用 JS 的方式来类比：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> color = <span class="string">&quot;red&quot;</span>;</span><br></pre></td></tr></table></figure><p>在 CSS 中等同于：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--color: red;</span><br></pre></td></tr></table></figure><p>当然这点跟 JS 不太一样，但是如果你学 PHP 这类语言或者 Sass 的话应该就很好理解了，在 PHP 或 Sass 中，声明变量的时候没有一个关键字，而是在变量名的第一位加上一个美元符号 $，这就代表声明变量了。</p><p>PHP:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$color = <span class="string">&quot;red&quot;</span>;</span><br></pre></td></tr></table></figure><p>Sass:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$color: color;</span><br></pre></td></tr></table></figure><p>但是 $ 符号被 Sass 占用了，@ 符号被 less 占了，所以 CSS 只能想出别的符号了，CSS 的符号就是两个减号 –</p><p><strong><em>使用</em></strong><br>光声明一个变量是没有什么太大意义的，只有使用了它，这个变量才算有价值：</p><p>JS:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(color);</span><br></pre></td></tr></table></figure><p>可以看到 var 只是个声明变量的关键字，color 才是变量名。</p><p>PHP:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $color;</span><br></pre></td></tr></table></figure><p>Scss:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">h1 &#123;</span><br><span class="line">    color: $color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是在 PHP 或 Sass 中，声明变量的时候带着$，用的时候也得带着$。</p><p>这就令许多开发者感到困惑，所以 CSS 在使用变量的时候用到了一个函数叫 var()：</p><p>CSS:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">h1 &#123;</span><br><span class="line">    color: <span class="keyword">var</span>(--color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然和 PHP、Sass 一样，调用时要带着前缀(因为那就是变量名的一部分)，但是不一样的是需要用一个 var() 来把变量包裹起来。</p><p>作用域</p><p>这个很好理解，不仅 JS 里有作用域，CSS 里也有作用域，比如：</p><p>JS:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> color = <span class="string">&quot;red&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">h1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">div</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> color = <span class="string">&quot;blue&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1(); <span class="comment">// red</span></span><br><span class="line">div(); <span class="comment">// blue</span></span><br></pre></td></tr></table></figure><p>类似于 CSS 里的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    --color: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">    color: <span class="keyword">var</span>(--color); <span class="comment">/** 这里获取到的是全局声明的变量，值为red **/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div &#123;</span><br><span class="line">    --color: blue;</span><br><span class="line">    color: <span class="keyword">var</span>(--color); <span class="comment">/** 这里获取到的是局部声明的变量，值为blue **/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是说，变量的作用域就是它所在的选择器的有效范围。</p><p>中文 CSS 变量<br>有一次我看到了两个脑洞大开的库，才发现 CSS 变量还可以这么玩：</p><p><a href="https://www.mybj123.com/gohref.php?url=https://www.yuque.com/fancy-components/xflqsh/yxn4m7">chinese-gradient</a></p><p><a href="https://www.mybj123.com/gohref.php?url=https://www.yuque.com/fancy-components/oco0rf/ded6m5">chinese-layout</a></p><p>从他俩的名字就可以看出，都是用 chinese 开头的，那么大概率就是用中文做的 CSS 变量，点进去一看果不其然。</p><p>也就是说 CSS 变量的包容性很强，不像以往编程的时候都必须是英文命名，中文这次居然也可以完美运行，不信咱们来试一下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在这里用link标签引入中文布局 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/chinese-layout&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 在这里用link标签引入中文渐变色 --&gt;</span></span><br><span class="line">&lt;link</span><br><span class="line">rel=&quot;stylesheet&quot;</span><br><span class="line">href=&quot;https://cdn.jsdelivr.net/npm/chinese-gradient&quot;</span><br><span class="line">/&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="comment">/* 清除默认样式 */</span></span></span><br><span class="line">* &#123;</span><br><span class="line">padding: 0;</span><br><span class="line">margin: 0;</span><br><span class="line">&#125;</span><br><span class="line">ul &#123;</span><br><span class="line">list-style: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="comment">/* 全屏显示 */</span></span></span><br><span class="line">html,</span><br><span class="line">body,</span><br><span class="line">ul &#123;</span><br><span class="line">height: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="comment">/* 在父元素上写入九宫格 */</span></span></span><br><span class="line">ul &#123;</span><br><span class="line">display: grid;</span><br><span class="line">grid: var(--九宫格);</span><br><span class="line">gap: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="comment">/* 给子元素上色 */</span></span></span><br><span class="line">li &#123;</span><br><span class="line">background: var(--极光绿);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210114142247973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzUyNjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="中文-CSS-变量"><a href="#中文-CSS-变量" class="headerlink" title="中文 CSS 变量"></a>中文 CSS 变量</h3><p>也就是说，CSS 变量可以这样定义：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body &#123; --蓝绿色: aquamarine; &#125;</span><br></pre></td></tr></table></figure><p>然后调用的时候：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h1 &#123; color: var(--蓝绿色); &#125;</span><br></pre></td></tr></table></figure><p>在 vue 中的变量 那么怎样才能在 vue3 的 style 中使用 script 里声明的变量呢？</p><p>首先我们先创建个支持 vue3 的 vite 项目：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vite-app vars</span><br></pre></td></tr></table></figure><p>然后进入到该文件夹安装依赖：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd vars</span><br><span class="line"></span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p>然后创建一个组件，组件型式长这样：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; color &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">color: <span class="string">&quot;red&quot;</span>,</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">vars</span>=<span class="string">&quot;&#123; color &#125;&quot;</span>&gt;</span></span><br><span class="line">h1 &#123;</span><br><span class="line">color: var(--color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>还记得文章一开始写的幻想中的组件是什么样吗：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">h1 &#123;</span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-tag">this</span><span class="selector-class">.color</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是就算 vue 再牛它也不可能给 CSS 安个 this 啊，除非再做一个什么预处理器，不过这次利用 CSS 变量已经可以很接近咱们幻想中的组件啦：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">vars</span>=<span class="string">&quot;&#123; color &#125;&quot;</span>&gt;</span></span><br><span class="line">h1 &#123;</span><br><span class="line">color: var(--color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先要在 ‘style’ 标签中写个 vars=”{}”，再在大括号里写上你在 data 中声明过的值。</p><p>再来试一下这个变量是不是响应式的，动态改变 ‘script’ 标签中的 this.color 值会不会引起视图的变化呢？来试一下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> &#123;</span></span><br><span class="line">opacity: 0,</span><br><span class="line">&#125;;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">setInterval</span>(<span class="function">(<span class="params">_</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.opacity &gt;= <span class="number">1</span> &amp;&amp; (<span class="built_in">this</span>.opacity = <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.opacity += <span class="number">0.2</span>;</span></span><br><span class="line">&#125;, 300);</span><br><span class="line">&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">vars</span>=<span class="string">&quot;&#123; opacity &#125;&quot;</span>&gt;</span></span><br><span class="line">h1 &#123;</span><br><span class="line">color: rgb(65, 184, 131);</span><br><span class="line">opacity: var(--opacity);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210114142404898.png" alt="在这里插入图片描述"></p><p>可以看到每 300 毫秒我们就改变一下 this.opacity 的值，它会映射到 CSS 变量上去，this.opacity 变了，–opacity 的值就会随之变化，视图也会随着数据的更新而相应的更新，这个特性简直太棒了！</p><p>多个变量之间使用逗号进行分隔：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">border: <span class="string">&quot;1px solid black&quot;</span>,</span></span><br><span class="line"><span class="javascript">color: <span class="string">&quot;red&quot;</span>,</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">vars</span>=<span class="string">&quot;&#123; border, color &#125;&quot;</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line">h1 &#123;</span><br><span class="line">color: var(--color);</span><br><span class="line">border: var(--border);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>脑洞大开<br>既然 chinese-gradient 和 chinese-layout 这两个 CSS 库验证了 CSS 中文变量的可行性，而且我记得对象的属性也是可以写中文的，那么咱们就来试一下在 vue 中能不能用这种黑魔法来写中文：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> &#123;</span></span><br><span class="line">透明度: 0,</span><br><span class="line">&#125;;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">setInterval</span>(<span class="function">(<span class="params">_</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>[<span class="string">&quot;透明度&quot;</span>] &gt;= <span class="number">1</span> &amp;&amp; (<span class="built_in">this</span>[<span class="string">&quot;透明度&quot;</span>] = <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>[<span class="string">&quot;透明度&quot;</span>] += <span class="number">0.2</span>;</span></span><br><span class="line">&#125;, 300);</span><br><span class="line">&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">vars</span>=<span class="string">&quot;&#123; 透明度 &#125;&quot;</span>&gt;</span></span><br><span class="line">h1 &#123;</span><br><span class="line">color: rgb(65, 184, 131);</span><br><span class="line">opacity: var(--透明度);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2021011414250032.png" alt="在这里插入图片描述"></p><p>居！然！管！用！了！这真是神了！</p><p>以后大家不会命名的话也别用汉语拼音了，直接写中文吧哈哈！后续维护的时候一看变量名就能一目了然(不过还是推荐用英文)。</p><p><strong><em>原理</em></strong><br>猜也能猜到，大概率是用到了类似于 dom.style.setProperty(‘–opacity’, this.opacity) 之类的方法，按下 f12 打开控制台一看，果不其然，它控制的是组件元素的 style 属性：<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210114142527117.png" alt="在这里插入图片描述"></p><p>style 中元素<br>不过我们刚才在 ‘style’ 标签中只用到了 var，scoped 其实也很常用，那么如果他们两个碰到一起去会编译成什么样呢？</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">vars</span>=<span class="string">&quot;&#123; 透明度 &#125;&quot;</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line">h1 &#123;</span><br><span class="line">color: var(--透明度);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210114142539680.png" alt="在这里插入图片描述"></p><p>编译运行结果<br>可以看到 Vue 把 CSS 变量也编译了一个和 data-v- 后面的那串随机字符一样的：<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210114142547734.png" alt="在这里插入图片描述"></p><p>Vue 把 CSS 变量也编译了一个和 data-v- 后面的那串随机字符一样<br>那么问题来了，假如我要是在全局样式里定义了一个 –color 属性，我在带有 scoped 属性的组件里想用这个全局的 CSS 变量，可是一旦在 scoped 中使用 CSS 变量就会被编译成：–62a9ebed-color，可是全局定义的不是 –62a9ebed-color 而是 –color，这样就会出现找不到全局属性的局面，这个问题要怎么解决呢？其实也很简单，只需要在–的后面加上一个 global: 就可以了：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">vars</span>=<span class="string">&quot;&#123; color &#125;&quot;</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line">h1 &#123;</span><br><span class="line">color: var(--global: color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样编译出来的 CSS 就会变成：var(–color) 啦！</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>怎么样是不是很好玩？Vue 这次更新诚意满满，不过大家都把关注点放在了 Composition-API 上了，没有注意到这些不起眼的边边角角，但就是这些边边角角却可以极大的提高我们的开发体验。</p><p>对了，CSS 变量也是有兼容性的:<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210114142620164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzUyNjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>从 caniuse 网站上可以看到，它是不兼容 IE 的，使用的时候记得确认一下自己项目需要兼容的范围。</p><p>好了，以上就是今天关于 Vue3 新特性在 CSS 中使用 JS 变量全部内容，希望对大家有用，也欢迎大家留言讨论。</p><p>The End.</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3 </tag>
            
            <tag> css </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo commands</title>
      <link href="2021/02/19/hexo-commands/"/>
      <url>2021/02/19/hexo-commands/</url>
      
        <content type="html"><![CDATA[<br><h3 id="1-hexo-的安装"><a href="#1-hexo-的安装" class="headerlink" title="1.hexo 的安装"></a>1.hexo 的安装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2-hexo-的相关命令"><a href="#2-hexo-的相关命令" class="headerlink" title="2.hexo 的相关命令"></a>2.hexo 的相关命令</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">hexo init [folder] # 新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站</span><br><span class="line"></span><br><span class="line">hexo new &quot;postName&quot; # 新建文章</span><br><span class="line"></span><br><span class="line">hexo new page &quot;pageName&quot; # 新建页面</span><br><span class="line"></span><br><span class="line">hexo generate # 生成静态页面至public目录</span><br><span class="line"></span><br><span class="line">hexo server # 开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br><span class="line"></span><br><span class="line">hexo deploy # 部署到GitHub</span><br><span class="line"></span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line"></span><br><span class="line">hexo version  # 查看Hexo的版本</span><br><span class="line"></span><br><span class="line">hexo clean # 清除缓存文件 (db.json) 和已生成的静态文件 (public)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 命令相关的缩写形式</span></span><br><span class="line">hexo n == hexo <span class="keyword">new</span></span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br><span class="line"></span><br><span class="line"><span class="comment">// 组合命令</span></span><br><span class="line">hexo s -g # 生成并本地预览</span><br><span class="line">hexo d -g # 生成并上传</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用github作为静态服务器搭建个人博客</title>
      <link href="2021/01/19/my-second-blog/"/>
      <url>2021/01/19/my-second-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用 github pages 服务搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于 github 的；</li></ol><a id="more"></a><ol start="4"><li>数据绝对安全，基于 github 的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li><li>等等；</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
